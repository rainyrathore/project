{"version":3,"sources":["webpack:///src/app/uploading/track-upload-header/track-upload-header.component.html","webpack:///src/app/uploading/track-upload-header/track-upload-header.component.ts","webpack:///src/app/uploading/track-form/album-control/album-control.component.html","webpack:///src/app/uploading/track-form/album-control/album-control.component.ts","webpack:///src/app/uploading/track-form/track-artist-control/track-artist-control.component.html","webpack:///src/app/uploading/track-form/track-artist-control/track-artist-control.component.ts","webpack:///src/app/uploading/track-form/track-form.component.html","webpack:///src/app/uploading/track-form/track-form.component.ts","webpack:///src/common/core/utils/scroll-invalid-input-into-view.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","webpack:///src/app/web-player/audio-upload-validator.ts","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///src/app/admin/tracks/crupdate-track-page/crupdate-track-page.component.ts","webpack:///src/app/admin/tracks/crupdate-track-page/crupdate-track-page.component.html","webpack:///src/common/uploads/directives/upload-button.directive.ts","webpack:///src/common/core/ui/chip-input/chip-input.component.ts","webpack:///src/common/core/ui/chip-input/chip-input.component.html","webpack:///src/common/guards/pending-changes/pending-changes-guard.service.ts","webpack:///src/app/admin/albums/crupdate-album-page/crupdate-album-page.component.ts","webpack:///src/app/admin/albums/crupdate-album-page/crupdate-album-page.component.html","webpack:///src/common/core/ui/chip-input/chip-input.module.ts","webpack:///node_modules/rxjs/_esm2015/internal/operators/throttle.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","webpack:///src/common/shared/form-controls/upload-image-control/upload-image-control.component.ts","webpack:///src/common/shared/form-controls/upload-image-control/upload-image-control.component.html","webpack:///src/app/uploading/album-form/album-artist-control/album-artist-control.component.html","webpack:///src/app/uploading/album-form/album-artist-control/album-artist-control.component.ts","webpack:///src/app/uploading/album-form/album-form.component.html","webpack:///src/app/uploading/album-form/album-form.component.ts","webpack:///src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","webpack:///src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","webpack:///src/app/uploading/uploading-host/uploading-host.component.ts","webpack:///src/app/uploading/uploading.module.ts","webpack:///src/app/uploading/uploading-routing.module.ts","webpack:///src/app/uploading/uploading-host/uploading-host.component.html","webpack:///src/common/uploads/utils/read-uploaded-folders.ts","webpack:///src/common/uploads/directives/upload-dropzone.directive.ts","webpack:///src/app/uploading/uploaded-media-preview/uploaded-media-preview.component.html","webpack:///src/app/uploading/uploaded-media-preview/uploaded-media-preview.component.ts","webpack:///src/app/uploading/upload-page/upload-page.component.html","webpack:///src/app/uploading/upload-page/upload-page.component.ts"],"names":["upload","TrackUploadHeaderComponent","cd","this","subscription","unsubscribe","progress$","pipe","throttleTime","animationFrame","a","leading","trailing","subscribe","progress","detectChanges","AlbumControlComponent","search","searchFormControl","loading$","BehaviorSubject","results$","selectedAlbum$","searchedOnce","bindToSearchControl","value","next","fn","propagateChange","valueChanges","debounceTime","distinctUntilChanged","switchMap","query","searchAlbums","catchError","of","albums","media","forceLocal","limit","modelTypes","finalize","map","response","results","clearSearchInput","album","setValue","provide","useExisting","multi","onMenuOpened","onMenuClosed","$event","stopPropagation","selectAlbum","TrackArtistControlComponent","searchUsers","searchControl","value$","bindSearchControl","artist","newArtists","filter","id","searchResults$","findMatches","artists","_","selectArtist","TrackFormComponent","fb","currentUser","tracks","toast","modal","audioValidator","uploadQueue","waveGenerator","router","settings","autoMatch","canceled","saved","errors$","defaultImage$","uniqueId","form","group","name","image","description","number","tags","genres","duration","url","youtube_id","spotify_popularity","local_only","waveData","expanded","suggestTagFn","tag","suggestGenreFn","genre","changes","currentValue","patchValue","albumForm","track","formValue","t","display_name","uploadQueueItem","uploadedResponse$","patchFormUsingFileUpload","get","customData","payload","length","artist_type","completed","getPayload","update","create","remove","open","markAsPristine","emit","errResponse","messages","show","title","body","ok","beforeClosed","confirmed","params","uri","validator","httpParams","diskPrefix","disk","types","audio","video","then","uploadedFiles","start","queueItem","find","queueItemId","generate","uploadedFile","uploads$","markForCheck","values","metadata","fileEntry","comment","release_date","indexOf","trackUrl","bodyExpansion","scrollInvalidInputIntoView","errors","prefix","firstKey","Object","keys","node","document","getElementById","scrollIntoView","behavior","block","inline","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","source","checked","_MatSlideToggleMixinBase","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","_ngZone","defaults","_animationMode","_dir","super","_onChange","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","dragChange","parseInt","monitor","focusOrigin","_inputElement","nativeElement","focus","Promise","resolve","stopMonitoring","event","_emitChangeEvent","isDisabled","disabled","options","focusVia","c","ɵfac","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","_onChangeEvent","_onInputClick","_onLabelTextChange","_r12","_r16","inputId","textContent","trim","toString","directives","styles","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","AudioUploadValidator","DEFAULT_MAX_SIZE_MB","showToast","validations","maxSize","getMaxFileSize","i18n","push","CdkAccordionModule","CdkAccordionItem","CdkAccordion","nextId","_stateChanges","Subject","_openCloseAllActions","_multi","_openCloseAll","complete","ɵdir","nextId$1","accordion","_expansionDispatcher","_openCloseAllSubscription","Subscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","notify","useValue","MatExpansionPanel_ng_template_5_Template","a0","a1","collapsedHeight","expandedHeight","MatExpansionPanelHeader_span_4_Template","ctx_r3","_getExpandedState","MatExpansionPanelContent","MatAccordion","MatExpansionPanelTitle","MatExpansionPanelHeader","MatExpansionPanelActionRow","MatExpansionPanel","MatExpansionModule","_c5","_c6","MAT_ACCORDION","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","g","optional","visibility","_template","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","_uniqueSelectionDispatcher","_viewContainerRef","_document","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","x","y","fromState","toState","hideToggle","displayMode","_lazyContent","startWith","_portal","take","_body","focusedElement","activeElement","bodyElement","contains","_togglePosition","togglePosition","contentQueries","dirIndex","_hasSpacing","data","animation","panel","_element","_parentChangeSubscription","_animationsDisabled","accordionHideToggleChange","merge","_containsFocus","origin","_handleHeaderFocus","toggle","keyCode","preventDefault","_toggle","_handleHeaderKeydown","_animationStarted","_keydown","_getPanelId","_isExpanded","_getTogglePosition","_showToggle","arguments","_ownHeaders","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","updateActiveItem","ɵMatAccordion_BaseFactory","CrupdateTrackPageComponent","route","api","insideAdmin","navigate","trackForm","dirty","includes","toTracksPage","UploadButtonDirective","el","config","filesSelected","addEventListener","e","files","ChipInputComponent","formControl","items$","suggestedValues$","suggestFn","index","items","splice","propagate","matAutocomplete","isOpen","add","duplicate","inputEl","forEach","item","addFromChipInput","addFromAutocomplete","PendingChangesGuard","component","canDeactivate","CrupdateAlbumPageComponent","toAlbumsPage","ChipInputModule","defaultThrottleConfig","scheduler","lift","ThrottleTimeOperator","subscriber","destination","_hasTrailingValue","_trailingValue","throttled","schedule","dispatchNext","Subscriber","arg","clearThrottle","UploadImageControlComponent","imageValidator","uploadsApi","fileDeleted","buttonText","uploadInputConfig","multiple","src$","uploadConfig","defaultUploadConfig","paths","deleteForever","Image","uploadImage","AlbumArtistControlComponent","artists$","selectedArtist$","searchArtists","users","AlbumFormComponent","uploadButtonConfig","hideArtistControl","confirmCancel","allTracks$","Date","toISOString","slice","trackByFn","i","onlyValidUploads","uploadsAdded$","uploads","error$","sortedTracks","previousIndex","currentIndex","trackForms","some","f","isUploading","artist_id","model_type","newTracks","submit","uploadFiles","maybeCancel","reorderTracks","UploadProgressBarComponent","hidden","totalProgress","count$","pending","UploadingHostComponent","UploadingModule","UploadingRoutingModule","routes","path","children","permissions","simplified","forChild","readDirRecursive","entry","entries","dir","createReader","readEntries","key","childEntry","isDirectory","transformFileEntry","file","fullPath","UploadDropzoneDirective","disableDropzoneClick","disableDropzone","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","classList","dataTransfer","dropEffect","newEl","elementFromPoint","clientX","clientY","Array","from","kind","webkitGetAsEntry","concat","hasFiles","toLowerCase","UploadedMediaPreviewComponent","urls","setTimeout","trackLinkInput","select","isTrack","routerLinkToUrl","mediaLink","network","mediaUrl","shareUsing","target","createAlbum$","UploadPageComponent","savedMedia$","autoCreateArtists","newMedia","uploadTracks"],"mappings":"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","file":"x","sourcesContent":["<div class=\"meta\">\n    <div class=\"name\">{{upload.uploadedFile.name}}</div>\n    <div class=\"time-left\" *ngIf=\"progress.percentage && progress.percentage < 100 && !upload.error$.value\">\n        {{progress.eta}}\n        <span trans>left</span>\n    </div>\n    <div class=\"actions\">\n        <mat-icon\n                class=\"error-icon action-icon\"\n                svgIcon=\"error-outline\"\n                *ngIf=\"upload.error$ | async as error; else noError\"\n                [matTooltip]=\"error | trans\"\n                matTooltipPosition=\"left\"\n        ></mat-icon>\n        <ng-template #noError>\n            <span *ngIf=\"upload.completed\" trans>Upload complete.</span>\n            <span class=\"cancel-button\" *ngIf=\"!upload.completed\" (click)=\"upload.cancel()\" trans>Cancel</span>\n        </ng-template>\n    </div>\n</div>\n<mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"progress.percentage\"></mat-progress-bar>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {UploadQueueItem, UploadQueueItemProgress} from '@common/uploads/upload-queue/upload-queue-item';\nimport {throttleTime} from 'rxjs/operators';\nimport {animationFrameScheduler, Subscription} from 'rxjs';\n\n@Component({\n    selector: 'track-upload-header',\n    templateUrl: './track-upload-header.component.html',\n    styleUrls: ['./track-upload-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackUploadHeaderComponent implements OnChanges, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    private subscription: Subscription;\n    public progress: UploadQueueItemProgress;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n\n    ngOnChanges() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div class=\"many-inputs\">\r\n    <div class=\"input-container\">\r\n        <div class=\"fake-label\" trans>Album</div>\r\n        <div class=\"fake-input\" tabindex=\"0\" [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\">\r\n            <ng-container *ngIf=\"selectedAlbum$ | async as selectedAlbum; else anyAlbum\">\r\n                <media-image [media]=\"selectedAlbum\"></media-image>\r\n                <div class=\"title-name\">{{selectedAlbum.name}}</div>\r\n            </ng-container>\r\n            <ng-template #anyAlbum>\r\n                <div class=\"title-name\" trans>None</div>\r\n            </ng-template>\r\n            <div class=\"arrow-container\">\r\n                <div class=\"arrow\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"add-album-control-menu\">\r\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\r\n        <div class=\"search-input-wrapper\">\r\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" (blur)=\"searchInput.focus()\" #searchInput mat-menu-item trans-placeholder>\r\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\r\n                <mat-icon svgIcon=\"close\"></mat-icon>\r\n            </button>\r\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\r\n        </div>\r\n    </div>\r\n    <button mat-menu-item (click)=\"selectAlbum(null)\">\r\n        <media-image default=\"album\"></media-image>\r\n        <div class=\"info any-user-info\">\r\n            <div class=\"name\" trans>No Album</div>\r\n        </div>\r\n    </button>\r\n    <button mat-menu-item *ngFor=\"let album of results$ | async\" (click)=\"selectAlbum(album)\">\r\n        <media-image [media]=\"album\"></media-image>\r\n        <div class=\"user-info\">\r\n            <div class=\"name\">{{album.name}}</div>\r\n            <div class=\"email\">{{album?.artist?.name}}</div>\r\n        </div>\r\n    </button>\r\n    <button mat-menu-item disabled *ngIf=\"searchedOnce && !(results$ | async).length\" trans>No albums found.</button>\r\n</mat-menu>\r\n","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {catchError, debounceTime, distinctUntilChanged, finalize, map, switchMap} from 'rxjs/operators';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {Album, ALBUM_MODEL} from '../../../models/Album';\nimport {Search} from '../../../web-player/search/search.service';\n\n@Component({\n    selector: 'album-control',\n    templateUrl: './album-control.component.html',\n    styleUrls: ['./album-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: AlbumControlComponent,\n        multi: true,\n    }]\n})\nexport class AlbumControlComponent implements ControlValueAccessor, OnInit {\n    @ViewChild('searchInput', {static: true}) searchInput: ElementRef<HTMLInputElement>;\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public results$ = new BehaviorSubject<Album[]>([]);\n    public selectedAlbum$ = new BehaviorSubject<Album>(null);\n    private propagateChange: Function;\n    public searchedOnce = false;\n\n    constructor(\n        private search: Search,\n    ) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: Album) {\n        this.selectedAlbum$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchAlbums(query)),\n            catchError(() => of([])),\n        ).subscribe(albums => {\n            this.searchedOnce = true;\n            this.results$.next(albums);\n        });\n    }\n\n    private searchAlbums(query: string): Observable<Album[]> {\n        this.loading$.next(true);\n        return this.search.media(query, {forceLocal: true, limit: 7, modelTypes: [ALBUM_MODEL]})\n            .pipe(\n                finalize(() =>  this.loading$.next(false)),\n                map(response => response.results.albums),\n            );\n    }\n\n    public onMenuOpened() {\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n    }\n\n    public selectAlbum(album: Album) {\n        this.selectedAlbum$.next(album);\n        this.propagateChange(album);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<div class=\"input-container\">\n    <label [for]=\"id\" trans>Artists</label>\n    <input\n            type=\"text\"\n            [id]=\"id\"\n            [formControl]=\"searchControl\"\n            [matAutocomplete]=\"artistAuto\"\n            placeholder=\"Search artists and users...\"\n            trans-placeholder\n    >\n\n    <mat-chip-list [selectable]=\"false\">\n        <mat-chip class=\"chip-with-image\" *ngFor=\"let artist of value$ | async\" [removable]=\"true\" (removed)=\"deselectArtist(artist)\">\n            <img [src]=\"artist.image\" [alt]=\"artist.name\">\n            {{artist.name}}\n            <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\n        </mat-chip>\n    </mat-chip-list>\n\n    <mat-autocomplete #artistAuto=\"matAutocomplete\" class=\"media-autocomplete-panel\" (optionSelected)=\"selectArtist($event.option.value)\" [displayWith]=\"displayFn\">\n        <mat-option *ngFor=\"let artist of searchResults$ | async\" [value]=\"artist\">\n            <img [src]=\"artist.image\" [alt]=\"artist.name + ' image'\">\n            <span>{{artist.name}}</span>\n        </mat-option>\n    </mat-autocomplete>\n\n    <div class=\"error\" *ngIf=\"error\">{{error}}</div>\n</div>\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {debounceTime, distinctUntilChanged, map, switchMap} from 'rxjs/operators';\nimport {Search} from '../../../web-player/search/search.service';\nimport {MixedArtist} from '../../../web-player/artists/mixed-artist';\nimport {ARTIST_MODEL} from '../../../models/Artist';\n\n@Component({\n    selector: 'track-artist-control',\n    templateUrl: './track-artist-control.component.html',\n    styleUrls: ['./track-artist-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'custom-control'},\n    providers: [UploadQueueService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: TrackArtistControlComponent,\n        multi: true,\n    }]\n})\nexport class TrackArtistControlComponent implements OnInit, ControlValueAccessor {\n    @Input() error: string;\n    @Input() searchUsers = false;\n    @Input() id: string;\n\n    public searchControl = new FormControl();\n    public value$ = new BehaviorSubject<MixedArtist[]>([]);\n    public searchResults$: Observable<MixedArtist[]>;\n    private propagateChange: Function;\n\n    constructor(\n        private search: Search,\n    ) {}\n\n    ngOnInit() {\n        this.bindSearchControl();\n    }\n\n    public writeValue(value: MixedArtist[]) {\n        this.value$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public deselectArtist(artist: MixedArtist) {\n        const newArtists = this.value$.value.filter(a => a.id !== artist.id);\n        this.value$.next(newArtists);\n        this.propagateChange(this.value$.value);\n    }\n\n    public selectArtist(artist: MixedArtist) {\n        this.value$.next([...this.value$.value, artist]);\n        this.propagateChange(this.value$.value);\n    }\n\n    private bindSearchControl() {\n        this.searchResults$ = this.searchControl.valueChanges\n            .pipe(\n                distinctUntilChanged(),\n                debounceTime(250),\n                switchMap(query => this.findMatches(query))\n            );\n    }\n\n    public findMatches(query: string): Observable<MixedArtist[]> {\n        if ( ! query || typeof query !== 'string') {\n            return observableOf([]);\n        }\n\n        return this.search.media(query, {limit: 7, forceLocal: true, modelTypes: [ARTIST_MODEL]})\n            .pipe(map(response => response.results.artists));\n    }\n\n    public displayFn(_) {\n        return null;\n    }\n}\n","<form (ngSubmit)=\"submit()\" class=\"many-inputs\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\">\n    <track-upload-header [upload]=\"uploadQueueItem\" *ngIf=\"uploadQueueItem\"></track-upload-header>\n    <div class=\"inline-form\" *ngIf=\"albumForm\" [formGroup]=\"form\">\n        <ng-content></ng-content>\n        <div class=\"input-container\">\n            <label [for]=\"'track-form-' + uniqueId + '-name'\" class=\"hidden\" trans>Title</label>\n            <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-name'\" formControlName=\"name\" required>\n        </div>\n        <div class=\"actions\">\n            <button type=\"button\" [class.active]=\"expanded\" mat-icon-button (click)=\"toggleExpandedState()\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n            <button type=\"button\" (click)=\"maybeCancel()\" mat-icon-button>\n                <mat-icon svgIcon=\"delete\"></mat-icon>\n            </button>\n        </div>\n    </div>\n    <div [@bodyExpansion]=\"getExpandedState()\" class=\"full-form\">\n        <div class=\"full-form-container\" [class.inside-album]=\"albumForm\">\n            <div class=\"left-column\">\n                <upload-image-control formControlName=\"image\" [defaultBackground]=\"defaultImage$ | async\" uploadType=\"track_image\"></upload-image-control>\n                <button mat-flat-button color=\"accent\" type=\"button\" class=\"left-column-action-button\" (click)=\"openUploadMusicModal()\">\n                    <span *ngIf=\"this.track\" trans>Replace File</span>\n                    <span *ngIf=\"!this.track\" trans>Upload Track</span>\n                </button>\n            </div>\n            <div class=\"many-inputs fields-container\">\n                <div class=\"input-container\" *ngIf=\"!albumForm\">\n                    <label [for]=\"'track-form-' + uniqueId + '-name'\" trans>Title</label>\n                    <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-name'\" formControlName=\"name\" required>\n                    <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n                </div>\n\n                <album-control formControlName=\"album\" [id]=\"'track-form-' + uniqueId + '-album_id'\" *ngIf=\"!albumForm && (settings.get('player.artist_type') === 'artist' || insideAdmin())\"></album-control>\n                <track-artist-control [error]=\"errors.artists\" [id]=\"'track-form-' + uniqueId + '-artists'\" formControlName=\"artists\" *ngIf=\"settings.get('player.artist_type') === 'artist' || insideAdmin()\"></track-artist-control>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-duration'\" trans>Duration (ms)</label>\n                    <input type=\"number\" [id]=\"'track-form-' + uniqueId + '-duration'\" formControlName=\"duration\" min=\"1\" required>\n                    <div class=\"error\" *ngIf=\"errors.duration\">{{errors.duration}}</div>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin()\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-youtube-id'\" trans>Youtube Video ID</label>\n                    <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-track-youtube-id'\" formControlName=\"youtube_id\" minlength=\"1\" maxlength=\"30\">\n                    <div class=\"error\" *ngIf=\"errors.youtube_id\">{{errors.youtube_id}}</div>\n                    <p>ID only. https://www.youtube.com/embed?v=<strong>EPyh41zPg4Z</strong></p>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin()\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-url'\" trans>Remote Track Url</label>\n                    <input type=\"url\" [id]=\"'track-form-' + uniqueId + '-track-url'\" formControlName=\"url\" minlength=\"1\" maxlength=\"191\">\n                    <div class=\"error\" *ngIf=\"errors.url\">{{errors.url}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-genres'\" trans>Genres</label>\n                    <chip-input placeholder=\"+Add genre\" [id]=\"'track-form-' + uniqueId + '-track-genres'\"[suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                    <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-tags'\" trans>Tags</label>\n                    <chip-input placeholder=\"+Add tag\" [id]=\"'track-form-' + uniqueId + '-track-tags'\" [suggestFn]=\"suggestTagFn\" formControlName=\"tags\"></chip-input>\n                    <div class=\"error\" *ngIf=\"errors.tags\">{{errors.tags}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-description'\" trans>Description</label>\n                    <textarea type=\"text\" [id]=\"'track-form-' + uniqueId + '-track-description'\" formControlName=\"description\" minlength=\"10\" maxlength=\"999\" rows=\"5\"></textarea>\n                </div>\n\n                <button type=\"submit\" mat-raised-button *ngIf=\"!albumForm\" color=\"accent\" [disabled]=\"(loading$ | async) || (uploadQueueItem && !uploadQueueItem.completed)\" trans>Save</button>\n                <button type=\"button\" mat-button (click)=\"maybeCancel()\" *ngIf=\"!albumForm && !track\" trans>Cancel</button>\n            </div>\n        </div>\n    </div>\n</form>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Tracks} from '../../web-player/tracks/tracks.service';\nimport {Track} from '../../models/Track';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {DefaultImagePaths} from '../../web-player/default-image-paths.enum';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {USER_MODEL} from '@common/core/types/models/User';\nimport {\n    matExpansionAnimations,\n    MatExpansionPanelState\n} from '@angular/material/expansion';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {finalize, map} from 'rxjs/operators';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\nimport {Router} from '@angular/router';\nimport {UploadFileResponse} from '@common/uploads/uploads-api.service';\nimport {Album} from '../../models/Album';\nimport {MixedArtist} from '../../web-player/artists/mixed-artist';\nimport {Settings} from '@common/core/config/settings.service';\nimport {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\nimport {FileEntry} from '@common/uploads/types/file-entry';\nimport {randomString} from '@common/core/utils/random-string';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {GENRE_MODEL} from '../../models/Genre';\nimport {Search} from '../../web-player/search/search.service';\n\nexport interface ExtractedMetadata {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: MixedArtist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n}\n\nexport interface TrackUploadResponse extends UploadFileResponse {\n    metadata?: ExtractedMetadata;\n}\n\n@Component({\n    selector: 'track-form',\n    templateUrl: './track-form.component.html',\n    styleUrls: ['./track-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [matExpansionAnimations.bodyExpansion]\n})\nexport class TrackFormComponent implements OnInit, OnChanges {\n    @Input() autoMatch = false;\n    // track that is being edited\n    @Input() track: Track;\n\n    // creating a new track for this upload\n    @Input() uploadQueueItem: UploadQueueItem;\n\n    // track will be saved along with this album\n    @Input() albumForm: FormGroup;\n\n    // number of this track inside parent album\n    @Input() number: number;\n\n    @Output() canceled = new EventEmitter<UploadQueueItem|Track>();\n    @Output() saved = new EventEmitter<Track>();\n\n    public errors$ = new BehaviorSubject<{[K in keyof Partial<Track>]: string}>({});\n    public defaultImage$ = new BehaviorSubject<string>(DefaultImagePaths.album);\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public readonly uniqueId = randomString(5);\n\n    public form = this.fb.group({\n        id: [null],\n        name: [''],\n        image: [''],\n        description: [''],\n        number: [1],\n        tags: [[]],\n        genres: [[]],\n        duration: [null],\n        url: [''],\n        youtube_id: [''],\n        spotify_popularity: [''],\n        local_only: [true],\n        album: [null],\n        artists: [[]],\n        waveData: [null],\n    });\n    public expanded = false;\n\n    constructor(\n        private fb: FormBuilder,\n        private currentUser: CurrentUser,\n        private tracks: Tracks,\n        private toast: Toast,\n        private modal: Modal,\n        private audioValidator: AudioUploadValidator,\n        private uploadQueue: UploadQueueService,\n        private waveGenerator: WaveformGenerator,\n        private router: Router,\n        public settings: Settings,\n        private cd: ChangeDetectorRef,\n        private search: Search,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.number && changes.number.currentValue != null) {\n            this.form.patchValue({number: changes.number.currentValue});\n        }\n    }\n\n    ngOnInit() {\n        this.expanded = !this.albumForm;\n\n        if (this.track) {\n            const formValue = {...this.track};\n            formValue.tags = (this.track.tags || []).map(t => t.name) as any;\n            formValue.genres = (this.track.genres || []).map(t => t.display_name || t.name) as any;\n            this.form.patchValue(formValue);\n\n            if (this.track.album) {\n                this.defaultImage$.next(this.track.album.image || DefaultImagePaths.album);\n            }\n        }\n\n        if (this.uploadQueueItem) {\n            this.uploadQueueItem.uploadedResponse$.subscribe((response: TrackUploadResponse) => {\n                this.patchFormUsingFileUpload(response);\n            });\n        }\n\n        if (this.albumForm) {\n            this.albumForm.get('image').valueChanges.subscribe(url => {\n                this.defaultImage$.next(url || DefaultImagePaths.album);\n            });\n        }\n    }\n\n    public getPayload(): Partial<Track> {\n        const customData = this.uploadQueueItem ? this.uploadQueueItem.customData : {};\n        const payload =  {...this.form.value, ...customData};\n        if ( ! payload.artists.length && this.settings.get('player.artist_type') === 'user') {\n            payload.artists = [{id: this.currentUser.get('id'), artist_type: USER_MODEL}];\n        }\n        return payload;\n    }\n\n    public isUploading() {\n        return this.uploadQueueItem && !this.uploadQueueItem.completed;\n    }\n\n    public submit() {\n        if (this.albumForm) return;\n        this.loading$.next(true);\n\n        const payload = this.getPayload();\n\n        const request = this.track ?\n            this.tracks.update(this.track.id, payload) :\n            this.tracks.create(payload);\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                if (this.uploadQueueItem) {\n                    this.uploadQueue.remove(this.uploadQueueItem.id);\n                }\n                this.toast.open('Track saved.');\n                this.form.markAsPristine();\n                this.saved.emit(response.track);\n            }, errResponse => {\n                this.errors$.next(errResponse.messages);\n                scrollInvalidInputIntoView(this.errors$.value, `track-form-${this.uniqueId}`);\n            });\n    }\n\n    public toggleExpandedState() {\n        this.expanded = !this.expanded;\n    }\n\n    public getExpandedState(): MatExpansionPanelState {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n\n    public maybeCancel() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Remove Track',\n            body:  'Are you sure you want to cancel the upload and remove this track?',\n            ok:    'Remove'\n        }).beforeClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            if (this.uploadQueueItem) {\n                this.uploadQueue.remove(this.uploadQueueItem.id);\n                this.canceled.emit(this.uploadQueueItem);\n                this.toast.open('Upload canceled.');\n            } else if (this.track) {\n                this.tracks.delete([this.track.id]).subscribe(() => {\n                    this.canceled.emit(this.track);\n                    this.toast.open('Track deleted.');\n                });\n            }\n        });\n    }\n\n    public openUploadMusicModal() {\n        const params = {\n            uri: 'uploads',\n            validator: this.audioValidator,\n            httpParams: {autoMatch: this.autoMatch, diskPrefix: 'track_media', disk: 'public'}\n        } as UploadApiConfig;\n        openUploadWindow({types: [UploadInputTypes.audio, UploadInputTypes.video]}).then(uploadedFiles => {\n            if ( ! uploadedFiles) return;\n            // if this track form is already attached to existing upload queue item\n            // replace that item in queue service instead of creating a new item\n            const replacements = this.uploadQueueItem ? {[this.uploadQueueItem.id]: uploadedFiles[0]} : uploadedFiles;\n            this.uploadQueue.start(replacements, params).subscribe(response => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                this.waveGenerator.generate(queueItem.uploadedFile.native).then(waveData => {\n                    this.form.patchValue({waveData});\n                });\n                this.patchFormUsingFileUpload(response);\n                this.toast.open('Track uploaded.');\n            }, () => this.toast.open('Could not upload track'));\n            // make sure progress bar is shown if we're editing track from admin\n            if ( ! this.uploadQueueItem) {\n                this.uploadQueueItem = this.uploadQueue.uploads$.value[0];\n                this.cd.markForCheck();\n            }\n        });\n    }\n\n    private patchFormUsingFileUpload(response: TrackUploadResponse) {\n        const values: {[K in keyof Partial<Track>]: any} = {\n            name: response.metadata.title,\n            duration: response.metadata.duration,\n            url: response.fileEntry.url,\n            genres: response.metadata.genres || [],\n            description: response.metadata.comment,\n        };\n        if (response.metadata.album) {\n            values.album = response.metadata.album;\n        }\n        if (response.metadata.artist) {\n            values.artists = [response.metadata.artist];\n\n            // set artist on album, if does not already have one\n            if (this.albumForm && ! this.albumForm.value.artist) {\n                this.albumForm.patchValue({artist: response.metadata.artist});\n            }\n        }\n        if (response.metadata.image) {\n            values.image = response.metadata.image.url;\n\n            // set image on album, if does not already have one\n            if (this.albumForm && ! this.albumForm.value.image) {\n                this.albumForm.patchValue({image: response.metadata.image.url});\n            }\n        }\n        if (response.metadata.release_date && this.albumForm && !this.albumForm.value.release_date) {\n            this.albumForm.patchValue({release_date: response.metadata.release_date});\n        }\n        this.form.patchValue(values);\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n\n    public shouldShowDurationField() {\n        const trackUrl = this.form.get('url').value;\n        return !trackUrl || isAbsoluteUrl(trackUrl);\n    }\n\n    public suggestTagFn = (query: string) => {\n        return this.search.media(query, {modelTypes: ['App\\\\Tag'], limit: 5})\n            .pipe(map(response => response.results.tags.map(tag => tag.name)));\n    }\n\n    public suggestGenreFn = (query: string) => {\n        return this.search.media(query, {modelTypes: [GENRE_MODEL], limit: 5})\n            .pipe(map(response => response.results.genres.map(genre => genre.name)));\n    }\n}\n","export function scrollInvalidInputIntoView(errors: {[key: string]: any}, prefix = '') {\r\n    let firstKey = Object.keys(errors)[0];\r\n    if (firstKey) {\r\n        if (prefix) {\r\n            firstKey = `${prefix}-${firstKey}`;\r\n        }\r\n        const node = document.getElementById(firstKey);\r\n        if (node) {\r\n            node.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\r\n        }\r\n    }\r\n}\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r12 = ɵngcc0.ɵɵreference(1);\n        const _r16 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r16.textContent || !_r16.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r12)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import {Injectable} from '@angular/core';\r\nimport {UploadValidator} from '@common/uploads/validation/upload-validator';\r\nimport {FileSizeValidation} from '@common/uploads/validation/validations/file-size-validation';\r\nimport {convertToBytes} from '@common/core/utils/convertToBytes';\r\nimport {FileTypeValidation} from '@common/uploads/validation/validations/file-type-validation';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AudioUploadValidator extends UploadValidator {\r\n    protected readonly DEFAULT_MAX_SIZE_MB = 50;\r\n    public showToast = true;\r\n\r\n    protected initValidations() {\r\n        const validations = [\r\n            new FileSizeValidation(\r\n                {maxSize: this.getMaxFileSize()},\r\n                this.i18n\r\n            ),\r\n            new FileTypeValidation({types: ['audio', 'video']}, this.i18n),\r\n        ];\r\n\r\n        this.validations.push(...validations);\r\n    }\r\n\r\n    protected getMaxFileSize(): number {\r\n        return this.settings.get(\r\n            'uploads.max_size',\r\n            convertToBytes(this.DEFAULT_MAX_SIZE_MB, 'MB')\r\n        );\r\n    }\r\n}\r\n","import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r3._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Track} from '../../../models/Track';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {AlbumFormComponent} from '../../../uploading/album-form/album-form.component';\nimport {TrackFormComponent} from '../../../uploading/track-form/track-form.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'crupdate-track-page',\n    templateUrl: './crupdate-track-page.component.html',\n    styleUrls: ['./crupdate-track-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateTrackPageComponent implements OnInit, ComponentCanDeactivate {\n    @ViewChild(TrackFormComponent, {static: true}) trackForm: AlbumFormComponent;\n    public track: Track;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public settings: Settings,\n        private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.track = data.api.track;\n            }\n        });\n    }\n\n    public toTracksPage() {\n        if (this.insideAdmin()) {\n            this.router.navigate(['/admin/tracks']);\n        } else {\n            this.router.navigate(['/user', this.currentUser.get('id'), this.currentUser.get('display_name'), 'tracks']);\n        }\n    }\n\n    public canDeactivate() {\n        return !this.trackForm.form.dirty;\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.includes('admin');\n    }\n}\n","<track-form [track]=\"track\" class=\"material-panel\" (canceled)=\"toTracksPage()\" [autoMatch]=\"settings.get('player.artist_type') === 'artist'\" (saved)=\"toTracksPage()\"></track-form>","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() suggestFn: (query: string) => Observable<string[]>;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl', {static: true}) inputEl: HTMLInputElement;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: Function;\r\n    public items$ = new BehaviorSubject<string[]>([]);\r\n    public suggestedValues$ = new Subject<string[]>();\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: string, propagate = true) {\r\n        if ( ! this.matAutocomplete.isOpen) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: string, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: string, propagate = true) {\r\n        value = value ? value.trim() : '';\r\n        const duplicate = this.items$.value.indexOf(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    public writeValue(value: string[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            this.suggestedValues$.next(values);\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"true\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{item}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.viewValue)\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{value}}</mat-option>\r\n</mat-autocomplete>\r\n","import { CanDeactivate } from '@angular/router';\r\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\r\n    constructor(private modal: Modal) {}\r\n\r\n    canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\r\n        if (component.canDeactivate()) {\r\n            return true;\r\n        } else {\r\n            return this.modal.show(ConfirmModalComponent, {\r\n                title: 'Unsaved Changes',\r\n                body:  'You have unsaved changes. Do you want to discard them?',\r\n                ok:    'Discard'\r\n            }).beforeClosed();\r\n        }\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Album} from '../../../models/Album';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {AlbumFormComponent} from '../../../uploading/album-form/album-form.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'crupdate-album-page',\n    templateUrl: './crupdate-album-page.component.html',\n    styleUrls: ['./crupdate-album-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [UploadQueueService],\n})\nexport class CrupdateAlbumPageComponent implements OnInit, ComponentCanDeactivate {\n    @ViewChild(AlbumFormComponent, {static: true}) albumForm: AlbumFormComponent;\n    public album: Album;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private currentUser: CurrentUser,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.album = data.api.album;\n            }\n        });\n    }\n\n    public toAlbumsPage() {\n        if (this.router.url.includes('admin')) {\n            this.router.navigate(['/admin/albums']);\n        } else {\n            this.router.navigate(['/user', this.currentUser.get('id'), this.currentUser.get('display_name'), 'albums']);\n        }\n    }\n\n    public canDeactivate() {\n        return !this.albumForm.form.dirty;\n    }\n}\n","<album-form [album]=\"album\" class=\"material-panel\" (canceled)=\"toAlbumsPage()\" [autoMatch]=\"settings.get('player.artist_type') === 'artist'\" [confirmCancel]=\"false\" (saved)=\"toAlbumsPage()\"></album-form>","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatIconModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent\r\n    ],\r\n    exports: [\r\n        ChipInputComponent\r\n    ]\r\n})\r\nexport class ChipInputModule {\r\n}\r\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadInputConfig, UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {AppearanceImageUploadValidator} from '@common/admin/appearance/appearance-image-input/appearance-image-upload-validator';\nimport {UploadUri} from '@common/uploads/types/upload-uri.enum';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {UploadsApiService} from '@common/uploads/uploads-api.service';\n\n@Component({\n    selector: 'upload-image-control',\n    templateUrl: './upload-image-control.component.html',\n    styleUrls: ['./upload-image-control.component.scss'],\n    providers: [UploadQueueService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: UploadImageControlComponent,\n        multi: true,\n    }]\n})\nexport class UploadImageControlComponent implements ControlValueAccessor {\n    @Output() fileDeleted = new EventEmitter();\n    @Input() defaultBackground: string;\n    @Input() buttonText = 'Upload image';\n    @Input() uploadConfig: UploadApiConfig;\n    @Input() diskPrefix: string;\n    public uploadInputConfig: UploadInputConfig = {multiple: false, types: [UploadInputTypes.image]};\n    public src$ = new BehaviorSubject<string>(null);\n    private propagateChange: Function;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private imageValidator: AppearanceImageUploadValidator,\n        private uploadsApi: UploadsApiService,\n    ) {}\n\n    public writeValue(value: string) {\n        this.src$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public uploadImage(files: UploadedFile[]) {\n        this.uploadQueue.start(files, this.uploadConfig || this.defaultUploadConfig())\n            .subscribe(response => {\n                this.src$.next(response.fileEntry.url);\n                this.propagateChange(response.fileEntry.url);\n            });\n    }\n\n    public deleteUpload() {\n        this.uploadsApi.delete({paths: [this.src$.value], deleteForever: true})\n            .subscribe(() => {\n                this.src$.next(null);\n                this.propagateChange(null);\n                this.fileDeleted.emit();\n            });\n    }\n\n    private defaultUploadConfig(): UploadApiConfig {\n        return {\n            httpParams: {diskPrefix: this.diskPrefix || 'common_media'},\n            uri: UploadUri.Image,\n            validator: this.imageValidator,\n        };\n    }\n}\n","<image-or-icon *ngIf=\"src$ | async as src; else defaultBg\" [src]=\"src\" class=\"inherit-size\"></image-or-icon>\r\n<ng-template #defaultBg>\r\n    <image-or-icon *ngIf=\"defaultBackground\" [src]=\"defaultBackground\" class=\"inherit-size\"></image-or-icon>\r\n</ng-template>\r\n<div class=\"action-buttons\">\r\n    <button type=\"button\" class=\"action-button\" mat-stroked-button color=\"accent\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"uploadImage($event)\" trans>{{buttonText}}</button>\r\n    <button type=\"button\" class=\"action-button delete-button\" mat-icon-button *ngIf=\"src$ | async\" (click)=\"deleteUpload()\">\r\n        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n    </button>\r\n</div>\r\n<upload-progress-bar></upload-progress-bar>","<div class=\"fake-input\" [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\">\n        <span *ngIf=\"selectedArtist$ | async as selectedArtist; else anyArtist\">\n            <media-image class=\"result-image\" [media]=\"selectedArtist\"></media-image>\n            {{selectedArtist.name}}\n        </span>\n    <ng-template #anyArtist>\n        <span trans>None</span>\n    </ng-template>\n    <div class=\"arrow-container\">\n        <div class=\"arrow\"></div>\n    </div>\n</div>\n\n<mat-menu #menu=\"matMenu\" class=\"album-artist-control-menu\">\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\n        <div class=\"search-input-wrapper\">\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" (blur)=\"searchInput.focus()\" #searchInput mat-menu-item trans-placeholder>\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\n                <mat-icon svgIcon=\"close\"></mat-icon>\n            </button>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n        </div>\n    </div>\n    <button mat-menu-item (click)=\"selectArtist(null)\">\n        <media-image default=\"artist\" class=\"result-image\"></media-image>\n        <div class=\"info any-user-info\">\n            <div class=\"name\" trans>No Artist</div>\n        </div>\n    </button>\n    <button mat-menu-item *ngFor=\"let artist of artists$ | async\" (click)=\"selectArtist(artist)\">\n        <media-image class=\"result-image\" [media]=\"artist\"></media-image>\n        <div class=\"user-info\">\n            <div class=\"name\">{{artist.name}}</div>\n            <div class=\"email\" trans>Artist</div>\n        </div>\n    </button>\n    <button mat-menu-item disabled *ngIf=\"searchedOnce && !(artists$ | async).length\" trans>No artists found.</button>\n</mat-menu>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    finalize,\n    map,\n    switchMap\n} from 'rxjs/operators';\nimport {MixedArtist} from '../../../web-player/artists/mixed-artist';\nimport {Search} from '../../../web-player/search/search.service';\nimport {ARTIST_MODEL} from '../../../models/Artist';\n\n@Component({\n    selector: 'album-artist-control',\n    templateUrl: './album-artist-control.component.html',\n    styleUrls: ['./album-artist-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'tabindex': '0'},\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: AlbumArtistControlComponent,\n        multi: true,\n    }]\n})\nexport class AlbumArtistControlComponent implements OnInit, ControlValueAccessor {\n    @ViewChild('searchInput', {static: true}) searchInput: ElementRef<HTMLInputElement>;\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public artists$ = new BehaviorSubject<MixedArtist[]>([]);\n    public selectedArtist$ = new BehaviorSubject<MixedArtist>(null);\n    private propagateChange: Function;\n    public searchedOnce = false;\n\n    constructor(private search: Search) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: MixedArtist) {\n        this.selectedArtist$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchArtists(query)),\n            catchError(() => of([])),\n        ).subscribe(users => {\n            this.searchedOnce = true;\n            this.artists$.next(users);\n        });\n    }\n\n    private searchArtists(query: string): Observable<MixedArtist[]> {\n        this.loading$.next(true);\n        return this.search.media(query, {limit: 7, forceLocal: true, modelTypes: [ARTIST_MODEL]})\n            .pipe(\n                finalize(() =>  this.loading$.next(false)),\n                map(response => response.results.artists),\n            );\n    }\n\n    public onMenuOpened() {\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n    }\n\n    public selectArtist(artist: MixedArtist) {\n        this.selectedArtist$.next(artist);\n        this.propagateChange(artist);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n    <div class=\"main-info-fields\">\r\n        <div class=\"left-column\">\r\n            <upload-image-control formControlName=\"image\" uploadType=\"album\"></upload-image-control>\r\n            <button mat-flat-button color=\"accent\" type=\"button\" class=\"upload-tracks-button\" [uploadButton]=\"uploadButtonConfig\" (filesSelected)=\"uploadFiles($event)\" trans>Upload Tracks</button>\r\n        </div>\r\n        <div class=\"text-fields-container many-inputs\">\r\n            <div class=\"input-container\">\r\n                <label for=\"album-form-name\" trans>Name</label>\r\n                <input type=\"text\" id=\"album-form-name\" formControlName=\"name\" required>\r\n                <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"album-form-release_date\" trans>Release Date</label>\r\n                <input type=\"date\" placeholder=\"YYYY-MM-DD\" id=\"album-form-release_date\" formControlName=\"release_date\" required>\r\n                <div class=\"error\" *ngIf=\"errors.release_date\">{{errors.release_date}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container\" *ngIf=\"!hideArtistControl || (!artist && settings.get('player.artist_type') === 'artist')\">\r\n                <label for=\"album-form-artist\" trans>Artist</label>\r\n                <album-artist-control id=\"album-form-artist\" formControlName=\"artist\"></album-artist-control>\r\n                <div class=\"error\" *ngIf=\"errors.artist_id\">{{errors.artist_id}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"album-form-description\" trans>Description</label>\r\n                <textarea type=\"text\" id=\"album-form-description\" formControlName=\"description\" minlength=\"10\" maxlength=\"250\" rows=\"5\"></textarea>\r\n                <div class=\"error\" *ngIf=\"errors.description\">{{errors.description}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"album-form-genres\" trans>Genres</label>\r\n                <chip-input placeholder=\"+Add genre\" id=\"album-form-genres\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\r\n                <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"album-form-tags\" trans>Tags</label>\r\n                <chip-input placeholder=\"+Add tag\" id=\"album-form-tags\" formControlName=\"tags\" [suggestFn]=\"suggestTagFn\"></chip-input>\r\n                <div class=\"error\" *ngIf=\"errors.tags\">{{errors.tags}}</div>\r\n            </div>\r\n\r\n            <button type=\"submit\" [disabled]=\"loading$ | async\" mat-raised-button color=\"accent\" trans>Save</button>\r\n            <button type=\"button\" mat-button (click)=\"maybeCancel()\" trans>Cancel</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<ul class=\"track-list\" cdkDropList (cdkDropListDropped)=\"reorderTracks($event)\">\r\n    <li class=\"track-list-item\" *ngFor=\"let track of allTracks$ | async; trackBy: trackByFn; index as index\" cdkDrag>\r\n        <track-form [albumForm]=\"form\" [track]=\"track\" *ngIf=\"track.model_type\" [number]=\"index + 1\" (canceled)=\"trackRemoved(track)\">\r\n            <button mat-icon-button cdkDragHandle type=\"button\">\r\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\r\n            </button>\r\n        </track-form>\r\n        <track-form [albumForm]=\"form\" [uploadQueueItem]=\"track\" *ngIf=\"!track.model_type\" [number]=\"index + 1\" (canceled)=\"trackRemoved(track)\">\r\n            <button mat-icon-button cdkDragHandle type=\"button\">\r\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\r\n            </button>\r\n        </track-form>\r\n    </li>\r\n</ul>\r\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    ViewChildren\n} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Albums} from '../../web-player/albums/albums.service';\nimport {TrackFormComponent} from '../track-form/track-form.component';\nimport {Album} from '../../models/Album';\nimport {BehaviorSubject} from 'rxjs';\nimport {finalize, map} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {USER_MODEL} from '@common/core/types/models/User';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {Track} from '../../models/Track';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadInputConfig, UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {Artist} from '../../models/Artist';\nimport {Settings} from '@common/core/config/settings.service';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {Search} from '../../web-player/search/search.service';\nimport {GENRE_MODEL} from '../../models/Genre';\n\ndeclare module 'common/uploads/types/upload-http-params' {\n    interface UploadHttpParams {\n        autoMatch?: boolean;\n    }\n}\n\n@Component({\n    selector: 'album-form',\n    templateUrl: './album-form.component.html',\n    styleUrls: ['./album-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AlbumFormComponent implements OnInit {\n    public uploadButtonConfig: UploadInputConfig = {multiple: true, types: [UploadInputTypes.audio, UploadInputTypes.video]};\n    // album that is being edited\n    @Input() album: Album;\n    // artist album should be attached to\n    @Input() artist: Artist;\n    @Input() hideArtistControl = false;\n    @Input() confirmCancel = true;\n    @Output() canceled = new EventEmitter();\n    @Input() autoMatch = false;\n    @Output() saved = new EventEmitter<Album>();\n    @ViewChildren(TrackFormComponent) trackForms: QueryList<TrackFormComponent>;\n\n    public errors: Partial<Album> = {};\n    public loading$ = new BehaviorSubject(false);\n    public allTracks$ = new BehaviorSubject<(UploadQueueItem|Track)[]>([]);\n\n    public form = this.fb.group({\n        name: [''],\n        image: [''],\n        artist: [null],\n        release_date: [new Date().toISOString().slice(0, 10)],\n        description: [''],\n        tags: [[]],\n        genres: [[]],\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        public uploadQueue: UploadQueueService,\n        private albums: Albums,\n        private cd: ChangeDetectorRef,\n        private currentUser: CurrentUser,\n        private modal: Modal,\n        private toast: Toast,\n        private audioValidator: AudioUploadValidator,\n        public settings: Settings,\n        private search: Search,\n    ) {}\n\n    ngOnInit() {\n        this.allTracks$ = new BehaviorSubject([\n            ...(this.album ? this.album.tracks : []),\n            ...this.onlyValidUploads(this.uploadQueue.uploads$.value),\n        ]);\n        this.uploadQueue.uploadsAdded$.subscribe(uploads => {\n            this.allTracks$.next([\n                ...this.allTracks$.value,\n                ...this.onlyValidUploads(uploads),\n            ]);\n        });\n        if (this.album) {\n            const value = {\n                ...this.album,\n                tags: this.album.tags.map(t => t.name),\n                genres: this.album.genres.map(g => g.display_name || g.name),\n            };\n            this.form.patchValue(value);\n        }\n    }\n\n    private onlyValidUploads(uploads: UploadQueueItem[]) {\n        return uploads.filter(upload => !upload.error$.value);\n    }\n\n    public reorderTracks(e: CdkDragDrop<never>) {\n        const sortedTracks = this.allTracks$.value;\n        moveItemInArray(sortedTracks, e.previousIndex, e.currentIndex);\n        this.allTracks$.next(sortedTracks);\n    }\n\n    public submit() {\n        this.loading$.next(true);\n\n        if (this.trackForms.some(f => f.isUploading())) {\n            this.toast.open('Some tracks are still uploading.');\n            return;\n        }\n\n        const payload = {\n            ...this.form.value,\n            tracks: this.trackForms.map(f => f.getPayload()),\n        };\n\n        // set artist\n        if (payload.artist) {\n            payload.artist_id = payload.artist.id;\n            payload.artist_type = payload.artist.artist_type;\n        } else if (this.artist) {\n            payload.artist_id = this.artist.id;\n            payload.artist_type = this.artist.model_type;\n        } else if (this.settings.get('player.artist_type') === 'user') {\n            payload.artist_id = this.currentUser.get('id');\n            payload.artist_type = USER_MODEL;\n        }\n        delete payload.artist;\n\n        const request = this.album ?\n            this.albums.update(this.album.id, payload) :\n            this.albums.create(payload);\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.form.markAsPristine();\n                this.toast.open('Album saved.');\n                this.uploadQueue.reset();\n                this.saved.emit(response.album);\n            }, errResponse => {\n                this.errors = errResponse.messages;\n                scrollInvalidInputIntoView(this.errors, 'track-form');\n                this.cd.markForCheck();\n            });\n    }\n\n    public maybeCancel() {\n        if ( ! this.confirmCancel) {\n            this.canceled.emit();\n            return;\n        }\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Album',\n            body:  'Are you sure you want to cancel all uploads and delete this album?',\n            ok:    'Delete'\n        }).beforeClosed().subscribe(confirmed => {\n            if (confirmed) {\n                this.form.reset();\n                this.uploadQueue.reset();\n                this.canceled.emit();\n            }\n        });\n    }\n\n    public uploadFiles(uploadedFiles: UploadedFile[]) {\n        const params = {\n            uri: 'uploads',\n            httpParams: {autoMatch: this.autoMatch, diskPrefix: 'track_media', disk: 'public'},\n            validator: this.audioValidator\n        } as UploadApiConfig;\n        this.uploadQueue.start(uploadedFiles, params).subscribe(() => {\n            //\n        }, () => this.toast.open('Could not upload tracks.'));\n    }\n\n    public trackRemoved(track: UploadQueueItem | Track) {\n        const newTracks = this.allTracks$.value.filter(t => t.id !== track.id);\n        this.allTracks$.next(newTracks);\n    }\n\n    public trackByFn = (i: number, upload: UploadQueueItem|Track) => upload.id;\n\n    public suggestTagFn = (query: string) => {\n        return this.search.media(query, {modelTypes: ['App\\\\Tag'], limit: 5})\n            .pipe(map(response => response.results.tags.map(tag => tag.name)));\n    };\n\n    public suggestGenreFn = (query: string) => {\n        return this.search.media(query, {modelTypes: [GENRE_MODEL], limit: 5})\n            .pipe(map(response => response.results.genres.map(genre => genre.name)));\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'uploading-host',\n  templateUrl: './uploading-host.component.html',\n  styleUrls: ['./uploading-host.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadingHostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UploadPageComponent} from './upload-page/upload-page.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChipInputModule} from '@common/core/ui/chip-input/chip-input.module';\nimport {TrackFormComponent} from './track-form/track-form.component';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {AlbumFormComponent} from './album-form/album-form.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {TrackUploadHeaderComponent} from './track-upload-header/track-upload-header.component';\nimport {TrackArtistControlComponent} from './track-form/track-artist-control/track-artist-control.component';\nimport {AlbumControlComponent} from './track-form/album-control/album-control.component';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MediaImageModule} from '../web-player/shared/media-image/media-image.module';\nimport {RouterModule} from '@angular/router';\nimport {UploadedMediaPreviewComponent} from './uploaded-media-preview/uploaded-media-preview.component';\nimport { AlbumArtistControlComponent } from './album-form/album-artist-control/album-artist-control.component';\nimport {UploadingRoutingModule} from './uploading-routing.module';\nimport { UploadingHostComponent } from './uploading-host/uploading-host.component';\n\n@NgModule({\n    declarations: [\n        UploadPageComponent,\n        TrackFormComponent,\n        AlbumFormComponent,\n        TrackUploadHeaderComponent,\n        TrackArtistControlComponent,\n        AlbumControlComponent,\n        UploadedMediaPreviewComponent,\n        AlbumArtistControlComponent,\n        UploadingHostComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        MediaImageModule,\n        UploadingRoutingModule,\n\n        MatIconModule,\n        MatProgressBarModule,\n        TranslationsModule,\n        UploadsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatButtonModule,\n        ChipInputModule,\n        MatChipsModule,\n        MatSlideToggleModule,\n        MatTooltipModule,\n        UploadImageControlModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatMenuModule,\n        LoadingIndicatorModule,\n    ],\n    exports: [\n        TrackFormComponent,\n        AlbumFormComponent,\n    ]\n})\nexport class UploadingModule {\n}\n","import {UploadPageComponent} from './upload-page/upload-page.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {TrackPageResolver} from '../web-player/tracks/track-page/track-page-resolver.service';\r\nimport {CrupdateTrackPageComponent} from '../admin/tracks/crupdate-track-page/crupdate-track-page.component';\r\nimport {CrupdateAlbumPageComponent} from '../admin/albums/crupdate-album-page/crupdate-album-page.component';\r\nimport {AlbumResolver} from '../web-player/albums/album/album-resolver.service';\r\nimport {PendingChangesGuard} from '@common/guards/pending-changes/pending-changes-guard.service';\r\nimport {UploadingHostComponent} from './uploading-host/uploading-host.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UploadingHostComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: UploadPageComponent,\r\n                data: {permissions: ['tracks.create', 'albums.create']}\r\n            },\r\n            {\r\n                path: 'tracks/:id/edit',\r\n                component: CrupdateTrackPageComponent,\r\n                resolve: {api: TrackPageResolver},\r\n                canDeactivate: [PendingChangesGuard],\r\n            },\r\n            {\r\n                path: 'albums/:id/edit',\r\n                component: CrupdateAlbumPageComponent,\r\n                resolve: {api: AlbumResolver},\r\n                canDeactivate: [PendingChangesGuard],\r\n                data: {simplified: true},\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UploadingRoutingModule {\r\n}\r\n","<router-outlet></router-outlet>\n","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n        const reader = dir.createReader();\r\n        reader.readEntries(entries => resolve(entries as any));\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","<div class=\"media-image-container\" [class.show-album-border]=\"media.model_type === 'album'\">\n    <media-image [media]=\"media\"></media-image>\n    <img class=\"album-border-image\" [src]=\"settings.getAssetUrl('images/album-border.png')\" alt=\"album border image\">\n</div>\n<div class=\"middle-column\">\n    <div class=\"artist-name\">{{isTrack(media) ? media.artists[0].name : media.artist.name}}</div>\n    <div class=\"track-name\">{{media.name}}</div>\n    <div class=\"genre-row\">\n        <mat-chip class=\"track-genre\" *ngIf=\"media.genres.length\">{{media.genres[0].name}}</mat-chip>\n    </div>\n    <div class=\"message\">\n        <span trans>Upload complete.</span> <a [routerLink]=\"mediaLink()\" trans> View now.</a>\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"title\" trans>Share your new {{media.model_type}}</div>\n    <div class=\"share-icons\">\n        <button mat-icon-button (click)=\"shareUsing('facebook')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/facebook.png')}}\" alt=\"facebook-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('twitter')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/twitter.png')}}\" alt=\"twitter-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('tumblr')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/tumblr.png')}}\" alt=\"tumblr-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('blogger')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/bloggr.png')}}\" alt=\"blogger-icon\">\n        </button>\n    </div>\n    <div class=\"track-link-input input-container\">\n        <label for=\"media-item-link\" class=\"hidden\" trans>Media link</label>\n        <input #trackLinkInput id=\"media-item-link\" type=\"text\" readonly [value]=\"mediaUrl()\" (click)=\"$event.target.select()\">\n    </div>\n</div>","import {Component, OnInit, ChangeDetectionStrategy, Input, ViewChild, ElementRef} from '@angular/core';\nimport {Track, TRACK_MODEL} from '../../models/Track';\nimport {ShareableNetworks, shareLinkSocially} from '@common/core/utils/share-link-socially';\nimport {Settings} from '@common/core/config/settings.service';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {Album} from '../../models/Album';\n\n@Component({\n    selector: 'uploaded-media-preview',\n    templateUrl: './uploaded-media-preview.component.html',\n    styleUrls: ['./uploaded-media-preview.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'material-panel'},\n})\nexport class UploadedMediaPreviewComponent implements OnInit {\n    @ViewChild('trackLinkInput', {static: true}) trackLinkInput: ElementRef<HTMLInputElement>;\n    @Input() media: Track|Album;\n\n    constructor(\n        public settings: Settings,\n        public urls: WebPlayerUrls\n    ) {}\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.trackLinkInput.nativeElement.focus();\n            this.trackLinkInput.nativeElement.select();\n        });\n    }\n\n    public mediaLink() {\n        if (this.isTrack(this.media)) {\n            return this.urls.track(this.media);\n        } else {\n            return this.urls.album(this.media);\n        }\n    }\n\n    public mediaUrl() {\n        return this.urls.routerLinkToUrl(this.mediaLink());\n    }\n\n    public shareUsing(network: ShareableNetworks) {\n        shareLinkSocially(network, this.mediaUrl());\n    }\n\n    public isTrack(media: Track|Album): media is Track {\n        return media.model_type === TRACK_MODEL;\n    }\n}\n","<div class=\"dropzone\" [fileDropzone]=\"uploadConfig\" [clickButton]=\"clickButton\" (filesDropped)=\"uploadTracks($event)\">\r\n    <div class=\"title\" trans>Drag and drop your tracks, videos & albums here.</div>\r\n    <div class=\"action-button\">\r\n        <button mat-flat-button color=\"accent\" type=\"button\" class=\"upload-button\" #clickMatButton trans>or choose files to upload</button>\r\n    </div>\r\n    <div class=\"setting-toggle-container\" *ngIf=\"uploadQueue.isEmpty()\">\r\n        <mat-slide-toggle (change)=\"createAlbum$.next($event.checked)\" trans>Create Album</mat-slide-toggle>\r\n        <p trans>Attach all uploaded files to a new album.</p>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"setting-toggle-container create-artists-toggle material-panel\" *ngIf=\"insideAdmin() && currentUser.hasPermission('artists.create')\">\r\n    <mat-slide-toggle (change)=\"autoCreateArtists = $event.checked\" trans>Create Artists</mat-slide-toggle>\r\n    <p trans>Automatically create artists based on track metadata (unless artist already exists).</p>\r\n</div>\r\n\r\n<div class=\"minutes-container\" *ngIf=\"currentUser.getRestrictionValue('tracks.create', 'minutes') as minuteLimit\">\r\n    <span trans>You have {{minuteLimit}} minutes left. Try <a class=\"hover-underline\" routerLink=\"/billing/upgrade\" target=\"_blank\">Pro accounts</a> to get more time and access to advanced features.</span>\r\n</div>\r\n\r\n<div class=\"track-upload-queue\" *ngIf=\"uploadQueue.uploads$ | async as uploads\">\r\n    <ng-container *ngIf=\"uploads.length\">\r\n        <album-form class=\"material-panel\" *ngIf=\"createAlbum$ | async; else createTracks\" [hideArtistControl]=\"!insideAdmin()\" (saved)=\"addSavedMedia($event)\"></album-form>\r\n        <ng-template #createTracks>\r\n            <ng-container *ngIf=\"errors$ | async as errors\">\r\n                <div class=\"track-panel material-panel\" *ngFor=\"let upload of uploads; trackBy: trackByFn\">\r\n                    <track-form [uploadQueueItem]=\"upload\" (saved)=\"addSavedMedia($event)\"></track-form>\r\n                </div>\r\n            </ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n</div>\r\n\r\n<div class=\"saved-tracks\">\r\n    <uploaded-media-preview [media]=\"media\" *ngFor=\"let media of savedMedia$ | async\"></uploaded-media-preview>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, ElementRef, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {Tracks} from '../../web-player/tracks/tracks.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {UploadInputConfig, UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {Track} from '../../models/Track';\nimport {TrackFormComponent} from '../track-form/track-form.component';\nimport {Album} from '../../models/Album';\nimport {Router} from '@angular/router';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\n\n@Component({\n    selector: 'upload-page',\n    templateUrl: './upload-page.component.html',\n    styleUrls: ['./upload-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [UploadQueueService],\n})\nexport class UploadPageComponent {\n    @ViewChild('clickMatButton', {read: ElementRef, static: true}) clickButton: ElementRef<HTMLButtonElement>;\n    @ViewChildren(TrackFormComponent) trackForms: QueryList<TrackFormComponent>;\n    public errors$ = new BehaviorSubject<{[key: string]: {[K in keyof Partial<Track>]: string}}>({});\n    public uploadConfig: UploadInputConfig = {\n        types: [UploadInputTypes.video, UploadInputTypes.audio],\n        multiple: true\n    };\n    public savedMedia$ = new BehaviorSubject<(Track|Album)[]>([]);\n    public createAlbum$ = new BehaviorSubject<boolean>(false);\n    public autoCreateArtists = false;\n\n    constructor(\n        private track: Tracks,\n        public currentUser: CurrentUser,\n        public uploadQueue: UploadQueueService,\n        public settings: Settings,\n        protected tracks: Tracks,\n        private toast: Toast,\n        private audioValidator: AudioUploadValidator,\n        private router: Router,\n        private waveGenerator: WaveformGenerator,\n    ) {}\n\n    public uploadTracks(files: UploadedFile[]) {\n        const params = {\n            uri: 'uploads',\n            httpParams: {autoMatch: this.autoCreateArtists, diskPrefix: 'track_media', disk: 'public'},\n            validator: this.audioValidator\n        } as UploadApiConfig;\n        this.uploadQueue.start(files, params).subscribe(response => {\n            const queueItem = this.uploadQueue.find(response.queueItemId);\n            this.waveGenerator.generate(queueItem.uploadedFile.native).then(waveData => {\n                queueItem.customData = {waveData};\n            });\n        });\n    }\n\n    public addSavedMedia(newMedia: Track|Album) {\n        this.savedMedia$.next([...this.savedMedia$.value, newMedia]);\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n\n    public trackByFn = (i: number, upload: UploadQueueItem) => upload.id;\n}\n"]}